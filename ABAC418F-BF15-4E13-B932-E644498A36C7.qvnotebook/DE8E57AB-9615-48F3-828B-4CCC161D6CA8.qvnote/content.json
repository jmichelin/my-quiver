{
  "title": "Unsorted",
  "cells": [
    {
      "type": "code",
      "language": "javascript",
      "data": "let arrayOfFunctions = [fn1, fn2, fn3, fn4]\n\n//Get that to be equal to:\nfn1(fn2(fn3(fn4(null))))\n\n\n\n\nBest Time to Buy and Sell Stocks\nWrite a function that takes in an array of integers representing the price of a stock on a given day. Assuming you can only perform one transaction per day (buy or sell a stock), find the maximum profit.\n\nExample 1:\nInput: [7, 1, 5, 3, 6, 4]\nOutput: 5\n\nmax. difference = 6-1 = 5 (not 7-1 = 6, as selling price needs to be larger than buying price)\nExample 2:\nInput: [7, 6, 4, 3, 1]\nOutput: 0\n\nIn this case, no transaction is done, i.e. max profit = 0.\n\n\n\nIs Subsequence\n\nGiven a string s and a string t, check if s is subsequence of t. You may assume that there is only lowercase English letters in both s and t. t is potentially a very long (length ~= 500,000) string, and s is a short string (<=100).\n\nA subsequence of a string is a new string which is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (ie, \"ace\" is a subsequence of \"abcde\" while \"aec\" is not).\nExample 1:\ns = \"abc\", t = \"ahbgdc\"\nReturn true.\nExample 2:\ns = \"axc\", t = \"ahbgdc\"\nReturn false.\n\nMove Zeros \n\nGiven an array nums, write a function to move all 0â€™s to the end of it while maintaining the relative order of the non-zero elements. Do not make a copy of the array; do this in-place. Minimize the total number of operations.\n\n\n\n\nRemove Linked List Element\nRemove all elements from a linked list of integers that have value val.\nExample\nGiven: 1 --> 2 --> 6 --> 3 --> 4 --> 5 --> 6, val = 6\nReturn: 1 --> 2 --> 3 --> 4 --> 5\n\nSortedInsert\n\nGiven a sorted stack and an element, insert the element into the correct position of the stack. The stack will have the methods: peek, isEmpty, push, and pop.\n\nSort Stack\n\nTakes an unsorted stack and sort it. You may only use stacks (& the call stack) as a storage mechanism.\n\n\nContainer With Most Water\nGiven n non-negative integers a1, a2, ..., an, where each represents a point at coordinate (i, ai). n vertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0). Find two lines, which together with x-axis forms a container, such that the container contains the most water.\nNote: You may not slant the container.\nReverse Linked List\n\n\n//http://algorithms.tutorialhorizon.com/reverse-a-linked-list/\nReverse a singly Linked List.\n\nGiven 1->2->3->4->5 \nreturn 5->4->3->2->1\n\nOne Sorted Linked List\nGiven two sorted linked lists, i.e. [1,2,3,4,8,20] and [2,4,4,8] combine them into one sorted linked list => [1,2,2,3,4,4,4,8,8,20]\n\nLinked List Partition\nGiven a linked list and a value x, partition it such that all nodes less than x come before nodes greater than or equal to x.\nYou should preserve the original relative order of the nodes in each of the two partitions.\nFor example,\nGiven 1->4->3->2->5->2 and x = 3,\nreturn 1->2->2->4->3->5.\n"
    }
  ]
}